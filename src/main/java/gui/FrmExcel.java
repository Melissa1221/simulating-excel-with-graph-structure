/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gui;


import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import ExcelRudimentario.Celda;
import ExcelRudimentario.CellInterpreter;
import ExcelRudimentario.Hoja_Calculo;
import graphs.Vertex;

/**
 *
 * @author USUARIO
 */
public class FrmExcel extends javax.swing.JFrame {
    final private Hoja_Calculo hojaCalculo;
    private CellInterpreter cellInterpreter;

    /**
     * Creates new form FrmExcel
     */
    public FrmExcel() {
        initComponents();
        hojaCalculo = new Hoja_Calculo();
    }
    private void initializeCellInterpreter() {
        List<Celda> celdas = new ArrayList<>();
        for (Vertex<Celda> vertex : hojaCalculo.getHoja().getVertices()) {
            celdas.add(vertex.getValue());
        }
        cellInterpreter = new CellInterpreter(celdas);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        jFrame2 = new javax.swing.JFrame();
        jPanel1 = new javax.swing.JPanel();
        jLTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTExcel = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jTFOperationUser = new javax.swing.JTextField();
        jBCalcular = new javax.swing.JButton();
        jBActualizar = new javax.swing.JButton();
        jTFResult = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jBLimpiarTabla = new javax.swing.JButton();
        jBLimpiar = new javax.swing.JButton();
        jBExit = new javax.swing.JButton();

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jFrame2Layout = new javax.swing.GroupLayout(jFrame2.getContentPane());
        jFrame2.getContentPane().setLayout(jFrame2Layout);
        jFrame2Layout.setHorizontalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame2Layout.setVerticalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLTitle.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLTitle.setText("Hoja de cálculos");

        jTExcel.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jTExcel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"A", "", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"B", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"C", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"D", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"E", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"F", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"G", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"H", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTExcel.setToolTipText("");
        jTExcel.setDoubleBuffered(true);
        jTExcel.setFillsViewportHeight(true);
        jTExcel.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTExcel.setShowGrid(false);
        jTExcel.setShowHorizontalLines(true);
        jTExcel.setShowVerticalLines(true);
        jTExcel.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                jTExcelInputMethodTextChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jTExcel);

        jLabel1.setText("Ingrese la operación");

        jTFOperationUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFOperationUserActionPerformed(evt);
            }
        });
        jTFOperationUser.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTFOperationUserKeyPressed(evt);
            }
        });

        jBCalcular.setText("Calcular");
        jBCalcular.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBCalcularMouseClicked(evt);
            }
        });
        jBCalcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCalcularActionPerformed(evt);
            }
        });
        jBCalcular.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jBCalcularKeyPressed(evt);
            }
        });

        jBActualizar.setText("Actualizar");
        jBActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBActualizarActionPerformed(evt);
            }
        });
        jBActualizar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jBActualizarKeyPressed(evt);
            }
        });

        jTFResult.setEnabled(false);
        jTFResult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFResultActionPerformed(evt);
            }
        });

        jLabel2.setText("Resultado");

        jBLimpiarTabla.setText("Limpiar tabla");
        jBLimpiarTabla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBLimpiarTablaActionPerformed(evt);
            }
        });

        jBLimpiar.setText("Limpiar");
        jBLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBLimpiarActionPerformed(evt);
            }
        });

        jBExit.setText("Salir");
        jBExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLTitle)
                .addGap(571, 571, 571))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(506, 506, 506))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTFOperationUser, javax.swing.GroupLayout.PREFERRED_SIZE, 606, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(17, 17, 17)
                                        .addComponent(jTFResult, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jBExit))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addComponent(jBCalcular)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jBLimpiar))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jBActualizar)
                                .addGap(29, 29, 29)
                                .addComponent(jBLimpiarTabla))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1282, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLTitle)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBActualizar)
                    .addComponent(jBLimpiarTabla))
                .addGap(40, 40, 40)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTFOperationUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBCalcular)
                    .addComponent(jBLimpiar))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTFResult, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jBExit)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTFOperationUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFOperationUserActionPerformed
       
    }//GEN-LAST:event_jTFOperationUserActionPerformed

    private void jTExcelInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_jTExcelInputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jTExcelInputMethodTextChanged

    private void jBCalcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCalcularActionPerformed

        calcular();
    }//GEN-LAST:event_jBCalcularActionPerformed
    private void calcular(){
        String operation = jTFOperationUser.getText();
        try {
            double result = cellInterpreter.interpret(operation);
            jTFResult.setText(Double.toString(result));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error en la operación: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    private void jBCalcularMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBCalcularMouseClicked
        calcular();
    }//GEN-LAST:event_jBCalcularMouseClicked
   private void actualizar() {
    int rowCount = jTExcel.getRowCount();
    int columnCount = jTExcel.getColumnCount();

    initializeCellInterpreter();
    for (int i = 0; i < rowCount; i++) {
        for (int j = 1; j < columnCount; j++) {
            Object value = jTExcel.getValueAt(i, j);
            String id = jTExcel.getValueAt(i, 0) + Integer.toString(j); // Crear el id (A1, B2, etc.)

            Vertex<Celda> celdaVertex = hojaCalculo.getCelda(id);
            if (celdaVertex != null) {
                Celda celda = celdaVertex.getValue();
                if (value != null && !value.toString().isEmpty()) {
                    try {
                        String content = value.toString();
                        celda.setContent(content);
                        double result = cellInterpreter.interpret(content);
                        celda.setValue(result);
                        jTExcel.setValueAt(result, i, j);
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(this, "Error en la celda: " + id + " - " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                    celda.setValue(0.00);
                    celda.setContent("");
                }
            }
        }
    }

    // Imprimir los valores almacenados en el grafo para verificación
    for (Vertex<Celda> vertex : hojaCalculo.getHoja().getVertices()) {
        Celda celda = vertex.getValue();
        System.out.println("Celda ID: " + celda.getId() + ", Valor: " + celda.getValue());
    }

    // Reinicializar el CellInterpreter con las celdas actualizadas
    
}
    private void jBActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBActualizarActionPerformed
        actualizar();
    }//GEN-LAST:event_jBActualizarActionPerformed

    private void jBLimpiarTablaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBLimpiarTablaActionPerformed
        int rowCount = jTExcel.getRowCount();
        int columnCount = jTExcel.getColumnCount();

        // Limpiar la tabla
        for (int i = 0; i < rowCount; i++) {
            for (int j = 1; j < columnCount; j++) {
                jTExcel.setValueAt(null, i, j);
            }
        }

        // Limpiar el grafo
        for (Vertex<Celda> vertex : hojaCalculo.getHoja().getVertices()) {
            Celda celda = vertex.getValue();
            celda.setValue(0.0);
            celda.setContent("");
        }

        // Reinicializar el CellInterpreter con las celdas actualizadas
        initializeCellInterpreter();

        // Imprimir los valores almacenados en el grafo para verificación
        for (Vertex<Celda> vertex : hojaCalculo.getHoja().getVertices()) {
            Celda celda = vertex.getValue();
            System.out.println("Celda ID: " + celda.getId() + ", Valor: " + celda.getValue());
        }
    }//GEN-LAST:event_jBLimpiarTablaActionPerformed

    private void jBLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBLimpiarActionPerformed
        jTFOperationUser.setText(""); // Limpiar el campo de texto de la operación
    }//GEN-LAST:event_jBLimpiarActionPerformed

    private void jTFResultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFResultActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFResultActionPerformed

    private void jBExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBExitActionPerformed
      this.dispose();
    }//GEN-LAST:event_jBExitActionPerformed

    private void jTFOperationUserKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFOperationUserKeyPressed
        if(evt.getKeyCode()== KeyEvent.VK_ENTER){
            jBCalcular.requestFocus();
        }
    }//GEN-LAST:event_jTFOperationUserKeyPressed

    private void jBCalcularKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jBCalcularKeyPressed
        calcular();
    }//GEN-LAST:event_jBCalcularKeyPressed

    private void jBActualizarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jBActualizarKeyPressed
        actualizar();
    }//GEN-LAST:event_jBActualizarKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmExcel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmExcel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmExcel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmExcel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmExcel().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBActualizar;
    private javax.swing.JButton jBCalcular;
    private javax.swing.JButton jBExit;
    private javax.swing.JButton jBLimpiar;
    private javax.swing.JButton jBLimpiarTabla;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JFrame jFrame2;
    private javax.swing.JLabel jLTitle;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTExcel;
    private javax.swing.JTextField jTFOperationUser;
    private javax.swing.JTextField jTFResult;
    // End of variables declaration//GEN-END:variables
}
